CCS PCM C Compiler, Version 4.032, 62930               07-oct.-14 07:59

               Filename: codigo1.lst

               ROM used: 905 words (11%)
                         Largest free fragment is 2048
               RAM used: 35 (10%) at main() level
                         59 (16%) worst case
               Stack:    3 worst case (1 in main + 2 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   2B0
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  MOVF   7B,W
0016:  MOVWF  27
0017:  BCF    03.7
0018:  BCF    03.5
0019:  BTFSS  0B.5
001A:  GOTO   01D
001B:  BTFSC  0B.2
001C:  GOTO   034
001D:  BTFSS  0B.3
001E:  GOTO   021
001F:  BTFSC  0B.0
0020:  GOTO   037
0021:  MOVF   22,W
0022:  MOVWF  04
0023:  MOVF   23,W
0024:  MOVWF  77
0025:  MOVF   24,W
0026:  MOVWF  78
0027:  MOVF   25,W
0028:  MOVWF  79
0029:  MOVF   26,W
002A:  MOVWF  7A
002B:  MOVF   27,W
002C:  MOVWF  7B
002D:  MOVF   20,W
002E:  MOVWF  0A
002F:  SWAPF  21,W
0030:  MOVWF  03
0031:  SWAPF  7F,F
0032:  SWAPF  7F,W
0033:  RETFIE
0034:  BCF    0A.3
0035:  BCF    0A.4
0036:  GOTO   065
0037:  BCF    0A.3
0038:  BCF    0A.4
0039:  GOTO   0F2
.................... #include<16f887.h> 
.................... //////// Standard Header file for the PIC16F887 device //////////////// 
.................... #device PIC16F887 
.................... #list 
....................  
.................... #device adc=10 
.................... #FUSES NOWDT, XT, NOPUT, NOPROTECT, NOBROWNOUT, NOLVP, NOCPD, NOWRT, NODEBUG  
.................... #use delay(clock=4000000) 
0299:  MOVLW  3A
029A:  MOVWF  04
029B:  BCF    03.7
029C:  MOVF   00,W
029D:  BTFSC  03.2
029E:  GOTO   2AD
029F:  MOVLW  01
02A0:  MOVWF  78
02A1:  CLRF   77
02A2:  DECFSZ 77,F
02A3:  GOTO   2A2
02A4:  DECFSZ 78,F
02A5:  GOTO   2A1
02A6:  MOVLW  4A
02A7:  MOVWF  77
02A8:  DECFSZ 77,F
02A9:  GOTO   2A8
02AA:  GOTO   2AB
02AB:  DECFSZ 00,F
02AC:  GOTO   29F
02AD:  BCF    0A.3
02AE:  BCF    0A.4
02AF:  GOTO   385 (RETURN)
.................... #use fast_io(a) 
.................... #use fast_io(b) 
.................... #use fast_io(c) 
.................... #use fast_io(e)   
.................... #use rs232(baud=9600, xmit=pin_c6,rcv=pin_c7, parity=N, bits=8) 
....................  
.................... int estadoSensor = 0; 
*
02D8:  BCF    03.5
02D9:  CLRF   28
.................... float potenciometro; 
.................... float voltaje; 
.................... float valorPwm; 
.................... int16 timer=0; 
02DA:  CLRF   35
02DB:  CLRF   36
.................... int16 segundo=0; 
02DC:  CLRF   37
02DD:  CLRF   38
....................  
.................... #INT_RTCC 
.................... void interrupcionTimer0(){ 
.................... set_timer0(6); 
*
0065:  MOVLW  06
0066:  MOVWF  01
.................... timer++; 
0067:  INCF   35,F
0068:  BTFSC  03.2
0069:  INCF   36,F
....................  
.................... if (timer==250){ 
006A:  MOVF   35,W
006B:  SUBLW  FA
006C:  BTFSS  03.2
006D:  GOTO   078
006E:  MOVF   36,F
006F:  BTFSS  03.2
0070:  GOTO   078
.................... output_toggle(PIN_B3); 
0071:  MOVLW  08
0072:  XORWF  06,F
.................... segundo++; 
0073:  INCF   37,F
0074:  BTFSC  03.2
0075:  INCF   38,F
.................... timer=0; 
0076:  CLRF   36
0077:  CLRF   35
.................... } 
.................... } 
....................  
....................  
0078:  BCF    0B.2
0079:  BCF    0A.3
007A:  BCF    0A.4
007B:  GOTO   021
.................... #INT_RB 
.................... void interrupcionSensor(){ 
.................... //tadoSensor=input(PIN_B1); 
.................... if (input(PIN_B4)==1){ 
*
00F2:  BTFSS  06.4
00F3:  GOTO   114
.................... output_low(PIN_B1); 
00F4:  BCF    06.1
.................... printf("Desbloqueado %Ld \n", segundo); 
00F5:  CLRF   4B
00F6:  MOVF   4B,W
00F7:  CALL   03A
00F8:  INCF   4B,F
00F9:  MOVWF  77
00FA:  MOVF   77,W
00FB:  BTFSS  0C.4
00FC:  GOTO   0FB
00FD:  MOVWF  19
00FE:  MOVLW  0D
00FF:  SUBWF  4B,W
0100:  BTFSS  03.2
0101:  GOTO   0F6
0102:  MOVLW  10
0103:  MOVWF  04
0104:  MOVF   38,W
0105:  MOVWF  4D
0106:  MOVF   37,W
0107:  MOVWF  4C
0108:  CALL   07C
0109:  MOVLW  20
010A:  BTFSS  0C.4
010B:  GOTO   10A
010C:  MOVWF  19
010D:  MOVLW  0A
010E:  BTFSS  0C.4
010F:  GOTO   10E
0110:  MOVWF  19
.................... segundo=0; 
0111:  CLRF   38
0112:  CLRF   37
.................... } 
.................... else if(input(PIN_B4)==0){ 
0113:  GOTO   135
0114:  BTFSC  06.4
0115:  GOTO   135
.................... output_high(PIN_B1); 
0116:  BSF    06.1
.................... printf("Bloqueado %Ld \n", segundo); 
0117:  CLRF   4B
0118:  MOVF   4B,W
0119:  CALL   051
011A:  INCF   4B,F
011B:  MOVWF  77
011C:  MOVF   77,W
011D:  BTFSS  0C.4
011E:  GOTO   11D
011F:  MOVWF  19
0120:  MOVLW  0A
0121:  SUBWF  4B,W
0122:  BTFSS  03.2
0123:  GOTO   118
0124:  MOVLW  10
0125:  MOVWF  04
0126:  MOVF   38,W
0127:  MOVWF  4D
0128:  MOVF   37,W
0129:  MOVWF  4C
012A:  CALL   07C
012B:  MOVLW  20
012C:  BTFSS  0C.4
012D:  GOTO   12C
012E:  MOVWF  19
012F:  MOVLW  0A
0130:  BTFSS  0C.4
0131:  GOTO   130
0132:  MOVWF  19
.................... segundo=0; 
0133:  CLRF   38
0134:  CLRF   37
.................... } 
.................... } 
0135:  BCF    0B.0
0136:  BCF    0A.3
0137:  BCF    0A.4
0138:  GOTO   021
.................... void main(){ 
*
02B0:  CLRF   04
02B1:  BCF    03.7
02B2:  MOVLW  1F
02B3:  ANDWF  03,F
02B4:  BSF    03.5
02B5:  BSF    03.6
02B6:  BCF    07.3
02B7:  MOVLW  19
02B8:  BCF    03.6
02B9:  MOVWF  19
02BA:  MOVLW  A6
02BB:  MOVWF  18
02BC:  MOVLW  90
02BD:  BCF    03.5
02BE:  MOVWF  18
02BF:  BSF    03.5
02C0:  BSF    03.6
02C1:  MOVF   09,W
02C2:  ANDLW  C0
02C3:  MOVWF  09
02C4:  BCF    03.6
02C5:  BCF    1F.4
02C6:  BCF    1F.5
02C7:  MOVLW  00
02C8:  BSF    03.6
02C9:  MOVWF  08
02CA:  BCF    79.5
02CB:  BSF    79.4
02CC:  MOVLW  02
02CD:  MOVWF  7B
02CE:  MOVLW  0A
02CF:  MOVWF  7A
02D0:  BCF    03.6
02D1:  MOVF   05,W
02D2:  ANDLW  FD
02D3:  MOVWF  05
02D4:  MOVF   07,W
02D5:  IORLW  01
02D6:  ANDLW  FD
02D7:  MOVWF  07
.................... 	set_tris_b(0x10); 
*
02DE:  MOVLW  10
02DF:  BSF    03.5
02E0:  MOVWF  06
.................... 	set_tris_a(0x01); 
02E1:  MOVLW  01
02E2:  MOVWF  05
.................... 	set_tris_c(0x00); 
02E3:  MOVLW  00
02E4:  MOVWF  07
.................... 	output_b(0x00); 
02E5:  BCF    03.5
02E6:  CLRF   06
.................... 	output_a(0x00); 
02E7:  CLRF   05
.................... 	output_c(0x00); 
02E8:  CLRF   07
.................... 	ENABLE_INTERRUPTS(INT_RB); 
02E9:  BSF    0B.3
02EA:  MOVLW  FF
02EB:  BSF    03.5
02EC:  IORWF  16,F
.................... 	ENABLE_INTERRUPTS(int_rtcc); 
02ED:  BCF    03.5
02EE:  BSF    0B.5
.................... 	ENABLE_INTERRUPTS(GLOBAL); 
02EF:  MOVLW  C0
02F0:  IORWF  0B,F
.................... 	SETUP_ADC_PORTS(ALL_ANALOG); 
02F1:  BSF    03.5
02F2:  BSF    03.6
02F3:  MOVF   09,W
02F4:  ANDLW  C0
02F5:  IORLW  1F
02F6:  MOVWF  09
02F7:  BCF    03.6
02F8:  BCF    1F.4
02F9:  BCF    1F.5
02FA:  MOVLW  00
02FB:  IORLW  FF
02FC:  BSF    03.6
02FD:  MOVWF  08
.................... 	setup_adc(ADC_CLOCK_DIV_32); 
02FE:  BCF    03.5
02FF:  BCF    03.6
0300:  BCF    1F.6
0301:  BSF    1F.7
0302:  BSF    03.5
0303:  BSF    1F.7
0304:  BCF    03.5
0305:  BSF    1F.0
.................... 	setup_ccp2(CCP_PWM); 
0306:  BCF    07.1
0307:  MOVLW  0C
0308:  MOVWF  1D
.................... 	setup_timer_2(T2_DIV_BY_1,25,1);			//prescales de 25, valor timer2 =1                       	 
0309:  MOVLW  00
030A:  MOVWF  78
030B:  IORLW  04
030C:  MOVWF  12
030D:  MOVLW  19
030E:  BSF    03.5
030F:  MOVWF  12
.................... 	set_pwm2_duty(127); 
0310:  MOVLW  7F
0311:  BCF    03.5
0312:  MOVWF  1B
.................... 	setup_timer_0(RTCC_INTERNAL | RTCC_DIV_16); 
0313:  BSF    03.5
0314:  MOVF   01,W
0315:  ANDLW  C0
0316:  IORLW  03
0317:  MOVWF  01
.................... 	set_timer0(6); 
0318:  MOVLW  06
0319:  BCF    03.5
031A:  MOVWF  01
.................... while (1){ 
.................... 	set_adc_channel(0);                       
031B:  MOVLW  00
031C:  MOVWF  78
031D:  MOVF   1F,W
031E:  ANDLW  C3
031F:  IORWF  78,W
0320:  MOVWF  1F
....................    delay_us(10);    
0321:  MOVLW  03
0322:  MOVWF  77
0323:  DECFSZ 77,F
0324:  GOTO   323
.................... 	potenciometro=read_adc(); 
0325:  BSF    1F.1
0326:  BTFSC  1F.1
0327:  GOTO   326
0328:  MOVF   1E,W
0329:  MOVWF  7A
032A:  BSF    03.5
032B:  MOVF   1E,W
032C:  BCF    03.5
032D:  MOVWF  39
032E:  MOVF   1E,W
032F:  MOVWF  3A
0330:  GOTO   139
0331:  MOVF   7A,W
0332:  MOVWF  2C
0333:  MOVF   79,W
0334:  MOVWF  2B
0335:  MOVF   78,W
0336:  MOVWF  2A
0337:  MOVF   77,W
0338:  MOVWF  29
.................... 	voltaje=potenciometro*5.0/1023.0; 
0339:  MOVF   2C,W
033A:  MOVWF  3C
033B:  MOVF   2B,W
033C:  MOVWF  3B
033D:  MOVF   2A,W
033E:  MOVWF  3A
033F:  MOVF   29,W
0340:  MOVWF  39
0341:  CLRF   40
0342:  CLRF   3F
0343:  MOVLW  20
0344:  MOVWF  3E
0345:  MOVLW  81
0346:  MOVWF  3D
0347:  CALL   158
0348:  MOVF   77,W
0349:  MOVWF  39
034A:  MOVF   78,W
034B:  MOVWF  3A
034C:  MOVF   79,W
034D:  MOVWF  3B
034E:  MOVF   7A,W
034F:  MOVWF  3C
0350:  MOVWF  40
0351:  MOVF   79,W
0352:  MOVWF  3F
0353:  MOVF   78,W
0354:  MOVWF  3E
0355:  MOVF   77,W
0356:  MOVWF  3D
0357:  CLRF   44
0358:  MOVLW  C0
0359:  MOVWF  43
035A:  MOVLW  7F
035B:  MOVWF  42
035C:  MOVLW  88
035D:  MOVWF  41
035E:  GOTO   1CD
035F:  MOVF   7A,W
0360:  MOVWF  30
0361:  MOVF   79,W
0362:  MOVWF  2F
0363:  MOVF   78,W
0364:  MOVWF  2E
0365:  MOVF   77,W
0366:  MOVWF  2D
.................... 	valorPwm=voltaje*200.0; 
0367:  MOVF   30,W
0368:  MOVWF  3C
0369:  MOVF   2F,W
036A:  MOVWF  3B
036B:  MOVF   2E,W
036C:  MOVWF  3A
036D:  MOVF   2D,W
036E:  MOVWF  39
036F:  CLRF   40
0370:  CLRF   3F
0371:  MOVLW  48
0372:  MOVWF  3E
0373:  MOVLW  86
0374:  MOVWF  3D
0375:  CALL   158
0376:  MOVF   7A,W
0377:  MOVWF  34
0378:  MOVF   79,W
0379:  MOVWF  33
037A:  MOVF   78,W
037B:  MOVWF  32
037C:  MOVF   77,W
037D:  MOVWF  31
.................... 	//set_pwm2_duty(valorPwm); 
.................... 	output_toggle(PIN_B2); 
037E:  MOVLW  04
037F:  XORWF  06,F
.................... 	delay_ms(500); 
0380:  MOVLW  02
0381:  MOVWF  39
0382:  MOVLW  FA
0383:  MOVWF  3A
0384:  GOTO   299
0385:  DECFSZ 39,F
0386:  GOTO   382
.................... }	 
0387:  GOTO   31B
.................... } 
.................... 	//output_low(PIN_B2); 
.................... 	//delay_ms(500); 
.................... 	/* 
.................... 	printf("Voltaje = %f \n" , voltaje); 
.................... 	printf(" valorPwm = %f \n" , valorPwm); 
.................... 	printf("Valor potenciometro = %f \n ", potenciometro); 
.................... 	delay_ms(500); 
.................... */ 
0388:  SLEEP

Configuration Fuses:
   Word  1: 2CF1   XT NOWDT NOPUT MCLR NOPROTECT NOCPD NOBROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   NOWRT BORV40
